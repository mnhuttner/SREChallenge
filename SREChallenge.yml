# Title:  SREChallenge.yml
#  Desc:  Ansible playbook yaml for installing, configuring, testing web server output
# Usage:  eg, ansible-playbook -vvvv SREChallenge.yml 2>&1 | tee SREChallenge.out
#   Run:  Sun Jul 23 18:59:37 EDT 2017
# ------------------------------------------------------------------------------------
---
- hosts: localhost
  user: root 
  become: root

  vars:
      file_name: SREChallenge.yml
      server: cent1
      content: <html> <head> <title>Hello World</title> </head> <body> <h1>Hello World!

  tasks:

# clean
   - name: remove prior nginx
     package:
       name: nginx
       state: absent

   - name: cleanup old configs
     command: rm -rf /etc/ssl/certs/cent1.crt  /etc/ssl/private/cent1.key /etc/nginx /var/log/nginx /usr/share/nginx

# now install new stuff

   - name: install latest packages
     action: >
       {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
     with_items:
       - git-core
       - openssl
       - nginx

# ------------------------------------------------------------------------------------
# Fetch GIT repo content (if needed)
   - name: Check Nginx configs exist
     stat: path=/etc/nginx/.git
     register: git_exists

   - name: Remove default Nginx configs
     file:
       path: /etc/nginx
       state: absent

   - name: Clone Nginx configs
     git:
       repo: https://github.com/mnhuttner/SREChallenge/
       dest: /etc/nginx
       version: master
       force: yes

# ------------------------------------------------------------------------------------
# Create default start page
   - copy: content="{{ content }}" dest="/usr/share/nginx/html/index.html"

# ------------------------------------------------------------------------------------
# Install SSL certs
   - name: generate SSL key
     command: openssl genrsa -des3 -passout pass:x -out /tmp/{{ server }}.pass.key 2048
   - name: check SSL key 1
     command: cat /tmp/{{ server }}.pass.key
   - name: generate SSL key 2
     command: openssl rsa -passin pass:x -in /tmp/{{ server }}.pass.key -out /etc/ssl/private/{{ server }}.key
   - name: check SSL key output
     command: cat /etc/ssl/private/{{ server }}.key
   - name: generate SSL key 3
     command: openssl req -new -key /etc/ssl/private/{{ server }}.key -out {{ server }}.csr -subj "/C=US/ST=NJ/L=Pennington/O=OrgName/OU=IT/CN={{ server }}"
   - name: generate SSL key 4
     command: openssl x509 -req -days 365 -in {{ server }}.csr -signkey /etc/ssl/private/{{ server }}.key -out /etc/ssl/certs/{{ server }}.crt

# ------------------------------------------------------------------------------------
# Check/test NGINX configuration
   - name: Check config
     command: head /etc/nginx/nginx.conf
   - service: name=nginx state=started enabled=yes
   - name: Test config
     command: nginx -t

# ------------------------------------------------------------------------------------
# Check/test browser service connections
   - name: Check SSL
     command: echo quit | openssl s_client -connect cent1:443 -state -nbio 2>&1 | grep "^SSL"
   - name: get default page
     command: curl -k -A 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0' -v -o content.out -L http://cent1
   - name: check output
     command: cat content.out
   - action: uri url=http://cent1 return_content=yes validate_certs=False
     register: webpage
#   - fail: msg='NGINX index page failed'
#     when: "'Hello World' not in webpage.stdout"

# ------------------------------------------------------------------------------------
# Ensure firewall is configured
   - firewalld:
       service: https
       permanent: true
       state: enabled
   - firewalld:
       port: 80/tcp
       permanent: true
       state: enabled
   - service: name=firewalld state=started enabled=yes
   - name: check port services
     command:  firewall-cmd --list-ports
     register: openports
# ------------------------------------------------------------------------------------
